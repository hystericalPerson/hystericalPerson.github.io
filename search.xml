<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>antv x6+vue3 demo</title>
      <link href="/2021/12/10/antv-x6-vue3/"/>
      <url>/2021/12/10/antv-x6-vue3/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一个自定义流程图编辑器，antv-X6 + vue3 实现。<br>由于项目实现完挺久的，简单的记录一下<br><img src="/images/img1.png" alt="demo页面"></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><h4 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h4><p><a href="https://github.com/hystericalPerson/vue3-x6-editor-demo">项目地址</a><br><a href="https://github.com/hystericalPerson/vue3-x6-editor-demo">https://github.com/hystericalPerson/vue3-x6-editor-demo</a></p><h4 id="功能点"><a href="#功能点" class="headerlink" title="功能点"></a>功能点</h4><ol><li>左侧组件<ul><li>基本组件</li><li>流程库</li><li>节点库</li></ul></li><li>中间展示部分</li><li>右侧关于节点的描述（双向绑定<code>node-data</code>中的数据）</li></ol><h4 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h4><p>按照页面布局，简单的划分3个组件。<code>graph</code>,<code>nodeDesc</code>,<code>dnd</code></p><h5 id="graph"><a href="#graph" class="headerlink" title="graph"></a>graph</h5><ol><li>创建组件<code>graph</code>,并将其配置化代码存入<code>config.js</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">editor.graph = new Graph(&#123;</span><br><span class="line">    ...createDefaultSetting(props.graphId, `$&#123;props.graphId&#125;map`)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">createDefaultSetting为配置化文件的引入</span><br></pre></td></tr></table></figure></li><li>绑定需要的画布事件函数<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 绑定画布的键盘事件</span><br><span class="line">const bindKey = () =&gt; &#123;</span><br><span class="line">    bindKeyCopy()</span><br><span class="line">    bindKeyPaste()</span><br><span class="line">    bindKeyShear()</span><br><span class="line">    bindKeyUndo()</span><br><span class="line">    bindKeyRedo()</span><br><span class="line">    bindKeySelectAll()</span><br><span class="line">    bindKeyDel()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="dnd"><a href="#dnd" class="headerlink" title="dnd"></a>dnd</h5><p>在左侧组件部分选用<code>dnd</code>，而不是选用<code>step</code><br><code>dnd</code>和<code>step</code>的优劣势对比：</p><ul><li><code>step</code>是内置封装好的组件，容易上手。但是不好拓展</li><li><code>dnd</code>可定制化开发，更容易扩展。可根据选用的预研进行<code>vue</code>或<code>react</code>的开发</li></ul><p><strong>重难点</strong></p><ul><li>在创建节点上，运用vue开发，因此必需使用<code>Graph.registerVueComponent</code>。如果只是采用<code>createNode</code>去进行创建，会在编辑情况下出现节点空白的BUG</li><li>由于需要与右侧的节点数据展示关联以及vue3组件的data存入在<code>dnd.vue</code>中.因此每当点击节点的时候需要判断并处理在父页面创建的<code>cmptCellInfo</code>对象。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//判断在对象中是否有此节点，没有则引入</span><br><span class="line"></span><br><span class="line">this.currentId = this.$el.closest(&#x27;[data-shape=vue-shape]&#x27;).getAttribute(&#x27;data-cell-id&#x27;)</span><br><span class="line">if (!this.cmptCellInfo[this.currentId]) &#123;</span><br><span class="line">    this.cmptCellInfo[this.currentId] = cloneDeep(defaultConfig(item))</span><br><span class="line">    cellNodeInfo.value &amp;&amp; (this.cmptCellInfo[this.currentId] = cloneDeep(cellNodeInfo.value))</span><br><span class="line">    !cellNodeInfo.value &amp;&amp; (this.cmptCellInfo[this.currentId] = cloneDeep(defaultConfig(item)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// 创建vue3组件</span><br><span class="line">const registerV3Comp = () =&gt; &#123;</span><br><span class="line">    for (const item in nodeInfo) &#123;</span><br><span class="line">        console.log(&#x27;into&#x27;)</span><br><span class="line">        Graph.registerVueComponent(`$&#123;item&#125;`, &#123;</span><br><span class="line">            template: `&lt;$&#123;item&#125; :info=&quot;cmptCellInfo[currentId]&quot;&gt;&lt;/$&#123;item&#125;&gt;`,</span><br><span class="line">            components: &#123;</span><br><span class="line">                [item]: nodeCmpt[item]</span><br><span class="line">            &#125;,</span><br><span class="line">            data () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    cmptCellInfo: cmptCellInfo,</span><br><span class="line">                    currentId: &#x27;&#x27;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            mounted () &#123;</span><br><span class="line">                this.currentId = this.$el.closest(&#x27;[data-shape=vue-shape]&#x27;).getAttribute(&#x27;data-cell-id&#x27;)</span><br><span class="line">                if (!this.cmptCellInfo[this.currentId]) &#123;</span><br><span class="line">                    this.cmptCellInfo[this.currentId] = cloneDeep(defaultConfig(item))</span><br><span class="line">                    cellNodeInfo.value &amp;&amp; (this.cmptCellInfo[this.currentId] = cloneDeep(cellNodeInfo.value))</span><br><span class="line">                    !cellNodeInfo.value &amp;&amp; (this.cmptCellInfo[this.currentId] = cloneDeep(defaultConfig(item)))</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, true)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>由于直接给节点的data赋值覆盖会导致视图没有渲染，所以<code>cmptCellInfo</code>中的所有属性都指向节点中的data对象</li></ul><ol><li>创建dnd并与画布绑定，将公共的配置化代码放入<code>config.js</code>中<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">const init = () =&gt; &#123;</span><br><span class="line">    createDnd()</span><br><span class="line">    registerV3Comp()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const createDnd = () =&gt; &#123;</span><br><span class="line">editor.dnd = new Addon.Dnd(&#123;</span><br><span class="line">    target: editor.graph,</span><br><span class="line">    getDropNode: (node) =&gt; &#123;</span><br><span class="line">        const cloneNode = node.clone(&#123; keepId: true &#125;)</span><br><span class="line">        cloneNode.data = cmptCellInfo[cloneNode.id]</span><br><span class="line">        // 清空选区</span><br><span class="line">        nextTick(() =&gt; &#123;</span><br><span class="line">            editor.graph.resetSelection(cloneNode)</span><br><span class="line">            cellClickCallback(cloneNode)</span><br><span class="line">        &#125;)</span><br><span class="line">        return cloneNode</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> // 创建vue3组件</span><br><span class="line">const registerV3Comp = () =&gt; &#123;</span><br><span class="line">    for (const item in nodeInfo) &#123;</span><br><span class="line">        console.log(&#x27;into&#x27;)</span><br><span class="line">        Graph.registerVueComponent(`$&#123;item&#125;`, &#123;</span><br><span class="line">            template: `&lt;$&#123;item&#125; :info=&quot;cmptCellInfo[currentId]&quot;&gt;&lt;/$&#123;item&#125;&gt;`,</span><br><span class="line">            components: &#123;</span><br><span class="line">                [item]: nodeCmpt[item]</span><br><span class="line">            &#125;,</span><br><span class="line">            data () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    cmptCellInfo: cmptCellInfo,</span><br><span class="line">                    currentId: &#x27;&#x27;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            mounted () &#123;</span><br><span class="line">                this.currentId = this.$el.closest(&#x27;[data-shape=vue-shape]&#x27;).getAttribute(&#x27;data-cell-id&#x27;)</span><br><span class="line">                if (!this.cmptCellInfo[this.currentId]) &#123;</span><br><span class="line">                    this.cmptCellInfo[this.currentId] = cloneDeep(defaultConfig(item))</span><br><span class="line">                    cellNodeInfo.value &amp;&amp; (this.cmptCellInfo[this.currentId] = cloneDeep(cellNodeInfo.value))</span><br><span class="line">                    !cellNodeInfo.value &amp;&amp; (this.cmptCellInfo[this.currentId] = cloneDeep(defaultConfig(item)))</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, true)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>将组件绑定拖拽事件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">const addCmptGraphNode = (type, info, e) =&gt; &#123;</span><br><span class="line">    if (onJudgeOnlyOneNode(type)) return</span><br><span class="line">    cellNodeInfo.value = info</span><br><span class="line">    const template = &#123;</span><br><span class="line">        ...nodeTypeConfig(type),</span><br><span class="line">        ...&#123;</span><br><span class="line">            components: &#123;</span><br><span class="line">                [type]: nodeCmpt[type]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    type === &#x27;cmptProcessNode&#x27; &amp;&amp; (template.width = 200)</span><br><span class="line">    const node = editor.graph.createNode(template)</span><br><span class="line">&#125;</span><br><span class="line">           </span><br></pre></td></tr></table></figure></li><li>在编辑时候需要逐个将下发的节点信息与<code>cmptCellInfo</code>绑定，不可直接用<code>tojson</code>进行绑定。此外，节点的信息必需优先于线。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 清空数据 画布</span><br><span class="line">editor.graph.clearCells()</span><br><span class="line">for (const key in cmptCellInfo) &#123;</span><br><span class="line">    delete cmptCellInfo[key]</span><br><span class="line">&#125;</span><br><span class="line">cells.forEach(cell =&gt; &#123;</span><br><span class="line">    if (cell.shape !== &#x27;edge&#x27;) &#123;</span><br><span class="line">        cmptCellInfo[cell.id] = cloneDeep(cell.data)</span><br><span class="line">        editor.graph.addNode(cell)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">cells.forEach(cell =&gt; &#123;</span><br><span class="line">    if (cell.shape === &#x27;edge&#x27;) &#123;</span><br><span class="line">        editor.graph.addEdge(cell)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h5 id="nodeDesc"><a href="#nodeDesc" class="headerlink" title="nodeDesc"></a>nodeDesc</h5><p>将数据绑定即可</p><p><strong>至此左中右的数据完成数据绑定。再根据业务需要自行处理</strong></p>]]></content>
      
      
      <categories>
          
          <category> demo </category>
          
          <category> 流程图编辑器 </category>
          
          <category> vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> X6 </tag>
            
            <tag> vue3 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
